Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nplugins {\n  kotlin(\"jvm\")\n  id(\"com.adarshr.test-logger\") version \"3.1.0\"\n  application\n}\n\ngroup = \"ga.overfullstack\"\nversion = \"1.0-SNAPSHOT\"\n\nrepositories {\n  mavenCentral()\n}\n\ndependencies {\n  val http4kVersion: String by project\n  implementation(\"org.http4k:http4k-core:$http4kVersion\")\n  implementation(\"org.http4k:http4k-serverless-lambda:$http4kVersion\")\n  implementation(\"org.http4k:http4k-format-moshi:$http4kVersion\")\n  implementation(\"org.slf4j:slf4j-api:1.7.36\")\n  val exposedVersion: String by project\n  implementation(\"org.jetbrains.exposed:exposed-core:$exposedVersion\")\n  implementation(\"org.jetbrains.exposed:exposed-dao:$exposedVersion\")\n  implementation(\"org.jetbrains.exposed:exposed-jdbc:$exposedVersion\")\n  implementation(\"com.h2database:h2:2.1.210\")\n\n  runtimeOnly(\"org.apache.logging.log4j:log4j-slf4j18-impl:2.17.0\")\n\n  testImplementation(\"org.mockito:mockito-inline:4.3.1\")\n//  testImplementation(\"org.powermock:powermock-module-junit4:+\")\n//  testImplementation(\"org.powermock:powermock-api-mockito2:+\")\n  testImplementation(platform(\"org.junit:junit-bom:5.8.2\"))\n  testImplementation(\"org.junit.jupiter:junit-jupiter-api\")\n  testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine\")\n}\n\njava.sourceCompatibility = JavaVersion.VERSION_17\n\ntasks {\n  test {\n    useJUnitPlatform()\n    ignoreFailures = true\n  }\n  withType<KotlinCompile> {\n    kotlinOptions {\n      jvmTarget = JavaVersion.VERSION_17.toString()\n    }\n  }\n}\n\ntestlogger {\n  setTheme(\"mocha\")\n  showExceptions = true\n  showStackTraces = false\n  showFullStackTraces = false\n  showCauses = false\n  slowThreshold = 2000\n  showSummary = true\n  showSimpleNames = true\n  showPassed = true\n  showSkipped = true\n  showFailed = true\n  showStandardStreams = false\n  showPassedStandardStreams = false\n  showSkippedStandardStreams = false\n  showFailedStandardStreams = false\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/build.gradle.kts	(date 1649593366791)
@@ -23,9 +23,10 @@
   implementation("org.jetbrains.exposed:exposed-core:$exposedVersion")
   implementation("org.jetbrains.exposed:exposed-dao:$exposedVersion")
   implementation("org.jetbrains.exposed:exposed-jdbc:$exposedVersion")
+  implementation("org.postgresql:postgresql:42.2.2")
   implementation("com.h2database:h2:2.1.210")
 
-  runtimeOnly("org.apache.logging.log4j:log4j-slf4j18-impl:2.17.0")
+  runtimeOnly("org.apache.logging.log4j:log4j-slf4j18-impl:2.17.1")
 
   testImplementation("org.mockito:mockito-inline:4.3.1")
 //  testImplementation("org.powermock:powermock-module-junit4:+")
@@ -47,22 +48,7 @@
       jvmTarget = JavaVersion.VERSION_17.toString()
     }
   }
-}
-
-testlogger {
-  setTheme("mocha")
-  showExceptions = true
-  showStackTraces = false
-  showFullStackTraces = false
-  showCauses = false
-  slowThreshold = 2000
-  showSummary = true
-  showSimpleNames = true
-  showPassed = true
-  showSkipped = true
-  showFailed = true
-  showStandardStreams = false
-  showPassedStandardStreams = false
-  showSkippedStandardStreams = false
-  showFailedStandardStreams = false
+  testlogger {
+    theme = com.adarshr.gradle.testlogger.theme.ThemeType.MOCHA_PARALLEL
+  }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"324ef40e-3221-44a2-a8c4-8bd26409ed92\" name=\"Changes\" comment=\":sparkles: Fetch missing PokÃ©mon&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;\">\n      <change afterPath=\"$PROJECT_DIR$/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build.gradle.kts\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ppp-demo\" type=\"f1a62948:ProjectNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ppp-demo\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ppp-demo\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"build\" type=\"c8890929:TasksNode$1\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ppp-demo\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"build setup\" type=\"c8890929:TasksNode$1\" />\n              </path>\n            </expand>\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JUnit5 Test Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.exposed/exposed-core/0.37.3/f636fb0d52353c8f1c130c007f3177d1e0fc6c19/exposed-core-0.37.3-sources.jar!/org/jetbrains/exposed/sql/Queries.kt\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.exposed/exposed-core/0.37.3/f636fb0d52353c8f1c130c007f3177d1e0fc6c19/exposed-core-0.37.3-sources.jar!/org/jetbrains/exposed/sql/ResultRow.kt\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.6.20-RC/e81e108a2817747538df29b32a151db38e5da5a2/kotlin-stdlib-common-1.6.20-RC-sources.jar!/kotlin/util/Tuples.kt\" root0=\"SKIP_INSPECTION\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHome\" value=\"$USER_HOME$/.sdkman/candidates/maven/current\" />\n        <option name=\"userSettingsFile\" value=\"$USER_HOME$/.m2/my-settings.xml\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"26YfBhhaxYQ4DJC79XpEzekuhPo\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"autoscrollFromSource\" value=\"true\" />\n    <option name=\"autoscrollToSource\" value=\"true\" />\n    <option name=\"flattenModules\" value=\"true\" />\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showExcludedFiles\" value=\"false\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SONARLINT_PRECOMMIT_ANALYSIS\": \"false\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\n    \"last_opened_file_path\": \"/Users/gopala.akshintala/code-clones/my-github/ppp-demo\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Project\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.0\",\n    \"settings.editor.selected.configurable\": \"preferences.keymap\",\n    \"spring.configuration.checksum\": \"2ad32cdb8b4aadcad1f521e03da44d08\"\n  }\n}]]></component>\n  <component name=\"Push.Settings\">\n    <force-push-targets>\n      <force-push-target remote-path=\"origin\" branch=\"master\" />\n    </force-push-targets>\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before\" />\n    </key>\n    <key name=\"CreateTestDialog.Recents.Supers\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"ga.overfullstack.pokemon\" />\n    </key>\n    <key name=\"CreateTestDialog.RecentsKey\">\n      <recent name=\"ga.overfullstack.pokemon.before\" />\n    </key>\n  </component>\n  <component name=\"RunAnythingCache\">\n    <option name=\"myCommands\">\n      <command value=\"gradle clean build\" />\n      <command value=\"gradle clean check\" />\n      <command value=\"gradle build\" />\n    </option>\n  </component>\n  <component name=\"RunManager\" selected=\"Gradle.PokemonDemoTest.queryAllPokemonPowers\">\n    <configuration name=\"ga.overfullstack.pokemon.before.PokemonDemo\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"ga.overfullstack.pokemon.before.PokemonDemo\" />\n      <module name=\"ppp-demo.main\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"ga.overfullstack.pokemon.before.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"PokemonDemoTest.queryAllPokemonPowers\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\":test\" />\n            <option value=\"--tests\" />\n            <option value=\"&quot;ga.overfullstack.pokemon.before.PokemonDemoTest.queryAllPokemonPowers&quot;\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"PokemonDemoTest.serve\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\":test\" />\n            <option value=\"--tests\" />\n            <option value=\"&quot;ga.overfullstack.pokemon.before.PokemonDemoTest.serve&quot;\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"ppp-demo [:PokemonDemo.main()]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\":PokemonDemo.main()\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" value=\"-Dorg.gradle.console=rich\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"ppp-demo [build]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"build\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"ppp-demo [clean check]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"clean\" />\n            <option value=\"check\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Gradle.PokemonDemoTest.queryAllPokemonPowers\" />\n        <item itemvalue=\"Gradle.PokemonDemoTest.serve\" />\n        <item itemvalue=\"Gradle.ppp-demo [build]\" />\n        <item itemvalue=\"Gradle.ppp-demo [clean check]\" />\n        <item itemvalue=\"Application.ga.overfullstack.pokemon.before.PokemonDemo\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"324ef40e-3221-44a2-a8c4-8bd26409ed92\" name=\"Changes\" comment=\"\" />\n      <created>1647605308693</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1647605308693</updated>\n      <workItem from=\"1647605314286\" duration=\"8606000\" />\n      <workItem from=\"1647660237959\" duration=\"6733000\" />\n      <workItem from=\"1647679524690\" duration=\"4433000\" />\n      <workItem from=\"1647689062630\" duration=\"2368000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Init\">\n      <created>1647615512976</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647615512976</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Migrate to http4k for Http\">\n      <created>1647661274527</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647661274527</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Migrate to http4k for Http&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;\">\n      <created>1647661313711</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647661313711</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\":sparkles: Fetch missing PokÃ©mon&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;\">\n      <created>1647682725243</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647682725243</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"5\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\n    <MESSAGE value=\"Init\" />\n    <MESSAGE value=\"Migrate to http4k for Http\" />\n    <MESSAGE value=\"Migrate to http4k for Http&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;\" />\n    <MESSAGE value=\":sparkles: Fetch missing PokÃ©mon&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\":sparkles: Fetch missing PokÃ©mon&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;\" />\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/.idea/workspace.xml	(date 1652631618605)
@@ -4,13 +4,19 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="324ef40e-3221-44a2-a8c4-8bd26409ed92" name="Changes" comment=":sparkles: Fetch missing PokÃ©mon&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;">
-      <change afterPath="$PROJECT_DIR$/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java" afterDir="false" />
+    <list default="true" id="324ef40e-3221-44a2-a8c4-8bd26409ed92" name="Changes" comment=":sparkles: Add some dummy tests&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;">
+      <change afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/renovate.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/icon.png" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/icon.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle.kts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/gradle.properties" beforeDir="false" afterPath="$PROJECT_DIR$/gradle.properties" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -76,9 +82,16 @@
     <option name="SIGN_OFF_COMMIT" value="true" />
   </component>
   <component name="HighlightingSettingsPerFile">
-    <setting file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.exposed/exposed-core/0.37.3/f636fb0d52353c8f1c130c007f3177d1e0fc6c19/exposed-core-0.37.3-sources.jar!/org/jetbrains/exposed/sql/Queries.kt" root0="SKIP_INSPECTION" />
-    <setting file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.exposed/exposed-core/0.37.3/f636fb0d52353c8f1c130c007f3177d1e0fc6c19/exposed-core-0.37.3-sources.jar!/org/jetbrains/exposed/sql/ResultRow.kt" root0="SKIP_INSPECTION" />
-    <setting file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.6.20-RC/e81e108a2817747538df29b32a151db38e5da5a2/kotlin-stdlib-common-1.6.20-RC-sources.jar!/kotlin/util/Tuples.kt" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/.github/workflows/build.yml" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/.gitignore" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/build.gradle.kts" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/docker-compose.yaml" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/gradle.properties" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/settings.gradle.kts" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/src/main/resources/log4j2.xml" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -101,27 +114,27 @@
     <option name="showExcludedFiles" value="false" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SONARLINT_PRECOMMIT_ANALYSIS": "false",
-    "WebServerToolWindowFactoryState": "false",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
-    "last_opened_file_path": "/Users/gopala.akshintala/code-clones/my-github/ppp-demo",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Project",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.0",
-    "settings.editor.selected.configurable": "preferences.keymap",
-    "spring.configuration.checksum": "2ad32cdb8b4aadcad1f521e03da44d08"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;false&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/gopala.akshintala/code-clones/my-github/ppp-demo&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;,
+    &quot;spring.configuration.checksum&quot;: &quot;2ad32cdb8b4aadcad1f521e03da44d08&quot;
   }
-}]]></component>
+}</component>
   <component name="Push.Settings">
     <force-push-targets>
       <force-push-target remote-path="origin" branch="master" />
@@ -156,8 +169,8 @@
       <command value="gradle build" />
     </option>
   </component>
-  <component name="RunManager" selected="Gradle.PokemonDemoTest.queryAllPokemonPowers">
-    <configuration name="ga.overfullstack.pokemon.before.PokemonDemo" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+  <component name="RunManager" selected="Gradle.PokemonDemoTest.play">
+    <configuration name="PokemonDemo" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="ga.overfullstack.pokemon.before.PokemonDemo" />
       <module name="ppp-demo.main" />
       <extension name="coverage">
@@ -170,7 +183,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="PokemonDemoTest.queryAllPokemonPowers" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="PokemonDemoTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -183,7 +196,7 @@
           <list>
             <option value=":test" />
             <option value="--tests" />
-            <option value="&quot;ga.overfullstack.pokemon.before.PokemonDemoTest.queryAllPokemonPowers&quot;" />
+            <option value="&quot;ga.overfullstack.pokemon.before.PokemonDemoTest&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -193,7 +206,7 @@
       <DebugAllEnabled>false</DebugAllEnabled>
       <method v="2" />
     </configuration>
-    <configuration name="PokemonDemoTest.serve" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="PokemonDemoTest.fetchPokemonPower" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -206,7 +219,7 @@
           <list>
             <option value=":test" />
             <option value="--tests" />
-            <option value="&quot;ga.overfullstack.pokemon.before.PokemonDemoTest.serve&quot;" />
+            <option value="&quot;ga.overfullstack.pokemon.before.PokemonDemoTest.fetchPokemonPower&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -216,7 +229,7 @@
       <DebugAllEnabled>false</DebugAllEnabled>
       <method v="2" />
     </configuration>
-    <configuration name="ppp-demo [:PokemonDemo.main()]" type="GradleRunConfiguration" factoryName="Gradle">
+    <configuration name="PokemonDemoTest.play" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -227,17 +240,19 @@
         </option>
         <option name="taskNames">
           <list>
-            <option value=":PokemonDemo.main()" />
+            <option value=":test" />
+            <option value="--tests" />
+            <option value="&quot;ga.overfullstack.pokemon.before.PokemonDemoTest.play&quot;" />
           </list>
         </option>
-        <option name="vmOptions" value="-Dorg.gradle.console=rich" />
+        <option name="vmOptions" />
       </ExternalSystemSettings>
-      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
       <method v="2" />
     </configuration>
-    <configuration name="ppp-demo [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="ppp-demo [:PokemonDemo.main()]" type="GradleRunConfiguration" factoryName="Gradle">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -248,45 +263,32 @@
         </option>
         <option name="taskNames">
           <list>
-            <option value="build" />
+            <option value=":PokemonDemo.main()" />
           </list>
         </option>
-        <option name="vmOptions" />
+        <option name="vmOptions" value="-Dorg.gradle.console=rich" />
       </ExternalSystemSettings>
       <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
       <method v="2" />
     </configuration>
-    <configuration name="ppp-demo [clean check]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
-      <ExternalSystemSettings>
-        <option name="executionName" />
-        <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="externalSystemIdString" value="GRADLE" />
-        <option name="scriptParameters" value="" />
-        <option name="taskDescriptions">
-          <list />
-        </option>
-        <option name="taskNames">
-          <list>
-            <option value="clean" />
-            <option value="check" />
-          </list>
-        </option>
-        <option name="vmOptions" />
-      </ExternalSystemSettings>
-      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
-      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
-      <DebugAllEnabled>false</DebugAllEnabled>
+    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
+      <deployment type="docker-compose.yml">
+        <settings>
+          <option name="envFilePath" value="" />
+          <option name="sourceFilePath" value="docker-compose.yaml" />
+        </settings>
+      </deployment>
       <method v="2" />
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Gradle.PokemonDemoTest.queryAllPokemonPowers" />
-        <item itemvalue="Gradle.PokemonDemoTest.serve" />
-        <item itemvalue="Gradle.ppp-demo [build]" />
-        <item itemvalue="Gradle.ppp-demo [clean check]" />
-        <item itemvalue="Application.ga.overfullstack.pokemon.before.PokemonDemo" />
+        <item itemvalue="Gradle.PokemonDemoTest.play" />
+        <item itemvalue="Gradle.PokemonDemoTest.fetchPokemonPower" />
+        <item itemvalue="Gradle.PokemonDemoTest" />
+        <item itemvalue="Application.PokemonDemo" />
+        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
       </list>
     </recent_temporary>
   </component>
@@ -301,7 +303,18 @@
       <workItem from="1647605314286" duration="8606000" />
       <workItem from="1647660237959" duration="6733000" />
       <workItem from="1647679524690" duration="4433000" />
-      <workItem from="1647689062630" duration="2368000" />
+      <workItem from="1647689062630" duration="3454000" />
+      <workItem from="1648481413625" duration="1793000" />
+      <workItem from="1648529746124" duration="3024000" />
+      <workItem from="1648565743979" duration="7911000" />
+      <workItem from="1649591258199" duration="6685000" />
+      <workItem from="1649691965357" duration="1042000" />
+      <workItem from="1650000741001" duration="38000" />
+      <workItem from="1650000786068" duration="249000" />
+      <workItem from="1650002635000" duration="3208000" />
+      <workItem from="1650184817817" duration="155000" />
+      <workItem from="1650536210415" duration="50000" />
+      <workItem from="1652631208213" duration="410000" />
     </task>
     <task id="LOCAL-00001" summary="Init">
       <created>1647615512976</created>
@@ -331,7 +344,14 @@
       <option name="project" value="LOCAL" />
       <updated>1647682725243</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary=":sparkles: Add some dummy tests&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;">
+      <created>1647694280716</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1647694280717</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -355,10 +375,14 @@
     <MESSAGE value="Migrate to http4k for Http" />
     <MESSAGE value="Migrate to http4k for Http&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;" />
     <MESSAGE value=":sparkles: Fetch missing PokÃ©mon&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;" />
-    <option name="LAST_COMMIT_MESSAGE" value=":sparkles: Fetch missing PokÃ©mon&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;" />
+    <MESSAGE value=":sparkles: Add some dummy tests&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;" />
+    <option name="LAST_COMMIT_MESSAGE" value=":sparkles: Add some dummy tests&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopalakshintala@gmail.com&gt;" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
     <select />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/ppp_demo$PokemonDemoTest_fetchPokemonPower.ic" NAME="PokemonDemoTest.fetchPokemonPower Coverage Results" MODIFIED="1648481558046" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+  </component>
 </project>
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:+ShowCodeDetailsInExceptionMessages\norg.gradle.caching=true\norg.gradle.parallel=true\norg.gradle.console=rich\nkotlin.code.style=official\nhttp4kVersion=4.23.0.0\nexposedVersion=0.37.3\nimmutablesVersion=2.9.0\nkotlinVersion=1.6.20-RC\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
--- a/gradle.properties	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/gradle.properties	(date 1650536216255)
@@ -3,7 +3,6 @@
 org.gradle.parallel=true
 org.gradle.console=rich
 kotlin.code.style=official
-http4kVersion=4.23.0.0
+http4kVersion=4.25.5.2
 exposedVersion=0.37.3
-immutablesVersion=2.9.0
-kotlinVersion=1.6.20-RC
+kotlinVersion=1.6.21
Index: src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ga.overfullstack.pokemon.before;\n\nimport kotlin.Pair;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class PokemonDemo {\n  private static final Logger logger = LoggerFactory.getLogger(PokemonDemo.class);\n  private static final int POKEMON_LIMIT_TO_FETCH = 5;\n\n  public static void main(String[] args) {\n    serve();\n  }\n\n  static void serve() {\n    // Fetch all PokÃ©mon\n    final var pokemonNames = HttpUtil.fetchAllPokemon(POKEMON_LIMIT_TO_FETCH);\n    logger.info(\"PokÃ©mon fetched: {}\", pokemonNames);\n\n    // Find DB match for fetched PokÃ©mon.\n    final var pokemonNameToPower = DBUtil.queryPokemonPowers(pokemonNames);\n    logger.info(\"{} Matching PokÃ©mon with Powers in DB: {}\", pokemonNameToPower.size(), pokemonNameToPower);\n\n    // Fetch powers for missing PokÃ©mon.\n    final var missingPokemonNames = pokemonNames.stream()\n        .filter(key -> !pokemonNameToPower.containsKey(key)).toList();\n    logger.info(\"Fetch for {} missing PokÃ©mon: {}\", missingPokemonNames.size(), missingPokemonNames);\n\n    // Insert new fetched PokÃ©mon into the DB.\n    final var newPokemonToInsert = missingPokemonNames.stream()\n        .map(pokemonName -> new Pair<>(pokemonName, HttpUtil.fetchPokemonPower(pokemonName))).toList();\n    DBUtil.batchInsertPokemonPowers(newPokemonToInsert);\n    final var allPokemonWithPowers = DBUtil.queryAllPokemonPowers();\n    logger.info(\"{} PokÃ©mon with Powers in DB: {}\", allPokemonWithPowers.size(), allPokemonWithPowers);\n  }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java b/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java
--- a/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/src/main/java/ga/overfullstack/pokemon/before/PokemonDemo.java	(date 1649604474178)
@@ -3,33 +3,38 @@
 import kotlin.Pair;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import java.util.Random;
 
 public class PokemonDemo {
   private static final Logger logger = LoggerFactory.getLogger(PokemonDemo.class);
-  private static final int POKEMON_LIMIT_TO_FETCH = 5;
+  private static final Random random = new Random();
+  private static final int POKEMON_OFFSET_TO_FETCH = random.ints(1, 100).findFirst().orElse(1);
+  private static final int POKEMON_LIMIT_TO_FETCH = random.ints(1, 6).findFirst().orElse(1);
 
   public static void main(String[] args) {
-    serve();
+    play();
   }
 
-  static void serve() {
+  static void play() {
     // Fetch all PokÃ©mon
-    final var pokemonNames = HttpUtil.fetchAllPokemon(POKEMON_LIMIT_TO_FETCH);
+    final var pokemonNames = HttpUtil.fetchAllPokemon(POKEMON_OFFSET_TO_FETCH, POKEMON_LIMIT_TO_FETCH);
     logger.info("PokÃ©mon fetched: {}", pokemonNames);
 
     // Find DB match for fetched PokÃ©mon.
-    final var pokemonNameToPower = DBUtil.queryPokemonPowers(pokemonNames);
-    logger.info("{} Matching PokÃ©mon with Powers in DB: {}", pokemonNameToPower.size(), pokemonNameToPower);
+    final var existingPokemonNameToPower = DBUtil.queryPokemonPowers(pokemonNames);
+    logger.info("{} Matching PokÃ©mon with Powers in DB: {}", existingPokemonNameToPower.size(), existingPokemonNameToPower);
 
     // Fetch powers for missing PokÃ©mon.
     final var missingPokemonNames = pokemonNames.stream()
-        .filter(key -> !pokemonNameToPower.containsKey(key)).toList();
+        .filter(key -> !existingPokemonNameToPower.containsKey(key)).toList();
     logger.info("Fetch for {} missing PokÃ©mon: {}", missingPokemonNames.size(), missingPokemonNames);
-
-    // Insert new fetched PokÃ©mon into the DB.
     final var newPokemonToInsert = missingPokemonNames.stream()
         .map(pokemonName -> new Pair<>(pokemonName, HttpUtil.fetchPokemonPower(pokemonName))).toList();
+    
+    // Insert new fetched PokÃ©mon into the DB.
     DBUtil.batchInsertPokemonPowers(newPokemonToInsert);
+    
+    // Fetch all PokÃ©mon in DB.
     final var allPokemonWithPowers = DBUtil.queryAllPokemonPowers();
     logger.info("{} PokÃ©mon with Powers in DB: {}", allPokemonWithPowers.size(), allPokemonWithPowers);
   }
Index: src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ga.overfullstack.pokemon.before;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.ArgumentMatchers.anyString;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\nimport java.util.Map;\nclass PokemonDemoTest {\n    @Test\n    void fetchPokemonPower() {\n      try (final var httpUtil = Mockito.mockStatic(HttpUtil.class)) {\n        httpUtil.when(() -> HttpUtil.fetchPokemonPower(anyString())).thenReturn(\"power\");\n        assertEquals(\"power\", HttpUtil.fetchPokemonPower(\"name\"));\n      }\n    }\n\n  @Test\n  void queryAllPokemonPowers() {\n    try (final var dbUtil = Mockito.mockStatic(DBUtil.class)) {\n      final var dummy = Map.of(\"name\", \"power\");\n      dbUtil.when(DBUtil::queryAllPokemonPowers).thenReturn(dummy);\n      assertEquals(dummy, DBUtil.queryAllPokemonPowers());\n    }\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java b/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java
--- a/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/src/test/java/ga/overfullstack/pokemon/before/PokemonDemoTest.java	(date 1649693079149)
@@ -1,26 +1,31 @@
 package ga.overfullstack.pokemon.before;
 
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.mockito.ArgumentMatchers.anyString;
-
+import kotlin.Pair;
+import org.jetbrains.exposed.sql.Database;
 import org.junit.jupiter.api.Test;
 import org.mockito.Mockito;
+
+import java.util.List;
 import java.util.Map;
+
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.ArgumentMatchers.anyInt;
+import static org.mockito.ArgumentMatchers.anyString;
+
 class PokemonDemoTest {
-    @Test
-    void fetchPokemonPower() {
-      try (final var httpUtil = Mockito.mockStatic(HttpUtil.class)) {
-        httpUtil.when(() -> HttpUtil.fetchPokemonPower(anyString())).thenReturn("power");
-        assertEquals("power", HttpUtil.fetchPokemonPower("name"));
-      }
-    }
-
   @Test
-  void queryAllPokemonPowers() {
-    try (final var dbUtil = Mockito.mockStatic(DBUtil.class)) {
-      final var dummy = Map.of("name", "power");
-      dbUtil.when(DBUtil::queryAllPokemonPowers).thenReturn(dummy);
-      assertEquals(dummy, DBUtil.queryAllPokemonPowers());
+  void play() {
+    try (final var httpUtil = Mockito.mockStatic(HttpUtil.class);
+        final var dbUtil = Mockito.mockStatic(DBUtil.class);
+        final var database = Mockito.mockStatic(Database.class)) {
+      database.when(() -> Database.Companion.connect(any(), any(), any())).thenReturn(null);
+      final var pokemonFromNetwork = List.of("pokemon1", "pokemon2", "pokemon3");
+      httpUtil.when(() -> HttpUtil.fetchAllPokemon(anyInt(), anyInt())).thenReturn(pokemonFromNetwork);
+      dbUtil.when(() -> DBUtil.queryPokemonPowers(pokemonFromNetwork))
+          .thenReturn(Map.of("pokemon1", "power1", "pokemon3", "power3"));
+      httpUtil.when(() -> HttpUtil.fetchPokemonPower("pokemon2")).thenReturn("power2");
+      PokemonDemo.play();
+      dbUtil.verify(() -> DBUtil.batchInsertPokemonPowers(List.of(new Pair<>("pokemon2", "power2"))));
     }
   }
 }
Index: src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ga.overfullstack.pokemon.before\n\nimport org.http4k.client.JavaHttpClient\nimport org.http4k.core.Body\nimport org.http4k.core.Method\nimport org.http4k.core.Request\nimport org.http4k.core.Response\nimport org.http4k.core.Uri\nimport org.http4k.core.then\nimport org.http4k.filter.ClientFilters\nimport org.http4k.format.Moshi.auto\n\nprivate const val POKE_BASE_URI = \"https://pokeapi.co/api/v2/\"\n\nclass HttpUtil {\n  companion object {\n    @JvmStatic\n    fun fetchAllPokemon(limit: Int): List<String> {\n      val resultsLens = Body.auto<Results>().toLens()\n      val pokemonApi = ClientFilters.SetBaseUriFrom(Uri.of(POKE_BASE_URI)).then(JavaHttpClient())\n      val response: Response = pokemonApi(Request(Method.GET, \"pokemon\").query(\"limit\", limit.toString()))\n      return resultsLens(response).results.map { it.name }\n    }\n    \n    @JvmStatic\n    fun fetchPokemonPower(pokemonName: String): String {\n      val abilitiesLens = Body.auto<Abilities>().toLens()\n      val pokemonApi = ClientFilters.SetBaseUriFrom(Uri.of(POKE_BASE_URI)).then(JavaHttpClient())\n      val response: Response = pokemonApi(Request(Method.GET, \"pokemon/$pokemonName\"))\n      return abilitiesLens(response).abilities.first().ability.name\n    }\n  }\n  private data class Pokemon(val name: String)\n\n  private data class Results(val results: List<Pokemon>)\n\n  private data class Ability(val name: String)\n\n  private data class AbilityWrapper(val ability: Ability)\n  private data class Abilities(val abilities: List<AbilityWrapper>)\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt b/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt
--- a/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/src/main/java/ga/overfullstack/pokemon/before/HttpUtil.kt	(date 1649604268945)
@@ -15,13 +15,17 @@
 class HttpUtil {
   companion object {
     @JvmStatic
-    fun fetchAllPokemon(limit: Int): List<String> {
+    fun fetchAllPokemon(offset: Int, limit: Int): List<String> {
       val resultsLens = Body.auto<Results>().toLens()
       val pokemonApi = ClientFilters.SetBaseUriFrom(Uri.of(POKE_BASE_URI)).then(JavaHttpClient())
-      val response: Response = pokemonApi(Request(Method.GET, "pokemon").query("limit", limit.toString()))
+      val response: Response = pokemonApi(
+        Request(Method.GET, "pokemon")
+          .query("offset", offset.toString())
+          .query("limit", limit.toString())
+      )
       return resultsLens(response).results.map { it.name }
     }
-    
+
     @JvmStatic
     fun fetchPokemonPower(pokemonName: String): String {
       val abilitiesLens = Body.auto<Abilities>().toLens()
@@ -30,6 +34,7 @@
       return abilitiesLens(response).abilities.first().ability.name
     }
   }
+
   private data class Pokemon(val name: String)
 
   private data class Results(val results: List<Pokemon>)
Index: src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@file:JvmName(\"DBUtil\")\n\npackage ga.overfullstack.pokemon.before\n\nimport org.jetbrains.exposed.sql.Database\nimport org.jetbrains.exposed.sql.SchemaUtils\nimport org.jetbrains.exposed.sql.Table\nimport org.jetbrains.exposed.sql.andWhere\nimport org.jetbrains.exposed.sql.batchInsert\nimport org.jetbrains.exposed.sql.selectAll\nimport org.jetbrains.exposed.sql.transactions.transaction\n\nclass DBUtil {\n  companion object {\n    private val INIT_DATA = listOf(\n      \"pikachu\" to \"static\",\n      \"bulbasaur\" to \"chlorophyll\",\n      \"charmeleon\" to \"blaze\",\n      \"squirtle\" to \"torrent\",\n      \"eevee\" to \"adaptability\",\n    )\n\n    init {\n      Database.connect(\"jdbc:h2:mem:regular;DB_CLOSE_DELAY=-1;\", \"org.h2.Driver\")\n      transaction {\n        SchemaUtils.create(Powers)\n        Powers.batchInsert(INIT_DATA) { (name, power) ->\n          this[Powers.name] = name\n          this[Powers.power] = power\n        }\n      }\n    }\n\n    @JvmStatic\n    fun queryPokemonPowers(pokemonNames: List<String>): Map<String, String> {\n      return transaction {\n        Powers.selectAll()\n          .andWhere { Powers.name inList pokemonNames }\n          .associate { it[Powers.name] to it[Powers.power] }\n      }\n    }\n\n    @JvmStatic\n    fun queryAllPokemonPowers(): Map<String, String> {\n      return transaction {\n        Powers.selectAll().associate { it[Powers.name] to it[Powers.power] }\n      }\n    }\n\n    @JvmStatic\n    fun batchInsertPokemonPowers(pokemonToPower: List<Pair<String, String>>) {\n      transaction {\n        Powers.batchInsert(pokemonToPower) { (pokemonName, power) ->\n          this[Powers.name] = pokemonName\n          this[Powers.power] = power\n        }\n      }\n    }\n  }\n\n  private object Powers : Table() {\n    val id = integer(\"id\").autoIncrement()\n    val name = varchar(\"name\", 50).index()\n    val power = varchar(\"power\", 50)\n\n    override val primaryKey = PrimaryKey(id, name = \"PK_Powers_ID\")\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt b/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt
--- a/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/src/main/java/ga/overfullstack/pokemon/before/DBUtil.kt	(date 1649692539363)
@@ -21,7 +21,8 @@
     )
 
     init {
-      Database.connect("jdbc:h2:mem:regular;DB_CLOSE_DELAY=-1;", "org.h2.Driver")
+      // Database.connect("jdbc:h2:mem:regular;DB_CLOSE_DELAY=-1;", "org.h2.Driver")
+      Database.connect("jdbc:postgresql://localhost:5432/pokemon", driver = "org.postgresql.Driver", user = "postgres", password = "postgres")
       transaction {
         SchemaUtils.create(Powers)
         Powers.batchInsert(INIT_DATA) { (name, power) ->
Index: renovate.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/renovate.json b/renovate.json
new file mode 100644
--- /dev/null	(date 1649072220917)
+++ b/renovate.json	(date 1649072220917)
@@ -0,0 +1,21 @@
+{
+  "extends": [
+    "config:base"
+  ],
+  "automerge": true,
+  "commitBodyTable": true,
+  "packageRules": [
+    {
+      "matchPackagePatterns": [
+        "*"
+      ],
+      "matchUpdateTypes": [
+        "major",
+        "minor",
+        "patch"
+      ],
+      "groupName": "all dependencies",
+      "groupSlug": "all"
+    }
+  ]
+}
Index: docker-compose.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose.yaml b/docker-compose.yaml
new file mode 100644
--- /dev/null	(date 1648531316313)
+++ b/docker-compose.yaml	(date 1648531316313)
@@ -0,0 +1,12 @@
+version: "3.9"
+services:
+  database:
+    image: postgres:latest
+    restart: always
+    ports:
+      - "5432:5432"
+    container_name: pokemon
+    environment:
+      - POSTGRES_USER=postgres
+      - POSTGRES_PASSWORD=postgres
+      - POSTGRES_DB=pokemon
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Loki\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision 06f52a6b5dc6dd34986cd7a5438dfb0e9687d80d)
+++ b/README.md	(date 1648656843601)
@@ -1,1 +1,1 @@
-# Loki
+# PPP
